# -*- mode: python; -*-
print 'enter gunit..'
import platform
import os
import subprocess
import shutil

default = DefaultEnvironment()
env = default.Clone()

gtest_path = '#/third_party/googletest-release-1.8.0/googletest'
gmock_path = '#/third_party/googletest-release-1.8.0/googlemock'

gtest_dir = env.Install('#/build/include', gtest_path + '/include/gtest')
gmock_dir = env.Install('#/build/include', gmock_path + '/include/gmock')
gunit_h = env.Install('#/build/include/testing', 'gunit.h')
env.Depends(gunit_h, [gtest_dir, gmock_dir])


include = [
    gtest_path, gtest_path + '/include',
    gmock_path, gmock_path + '/include'
]

env.VariantDir(Dir('.').abspath + '/gtest', gtest_path + '/src')
env.VariantDir(Dir('.').abspath + '/gmock', gmock_path + '/src')

gmocklibname = 'gmock.lib'
gtestlibname = 'gtest{d}.lib'.format(d='d' if env['TARGET_CONFIG'] =='debug' else  '')

gmocklibpath = os.path.join(Dir('#/build/lib').abspath, gmocklibname)
gtestlibpath = os.path.join(Dir('#/build/lib').abspath, gtestlibname)

def create_dir_if_needed(dirname):
    try:
        os.makedirs(dirname)
    except OSError:
        pass

if not os.path.exists(gtestlibpath):
    cmd = 'copy ' + Dir('.').srcnode().abspath + '\msvc15\* ' + Dir(gtest_path).abspath + '\msvc /y'
    print Dir('.').abspath
    print cmd
    subprocess.call(cmd, shell=True)
    #build googletest
    os.chdir(Dir(gtest_path).abspath+ '\\msvc')
    assert os.path.isdir(Dir(gtest_path).abspath+'\\msvc')
    print os.getcwd()
    subprocess.call("devenv gtest.sln /Build", shell=True)
    fromfile = os.path.join(Dir(gtest_path).abspath , 'msvc','gtest', '{direct}'.format(direct='Debug' if env['TARGET_CONFIG'] =='debug' else 'Release'),  gtestlibname)
    print 'copying ' + fromfile + ' to ' + gtestlibpath
    create_dir_if_needed(Dir('#/build/lib').abspath)
    shutil.copyfile(fromfile, gtestlibpath)


if not os.path.exists(gmocklibpath):
   cmd = 'copy ' + Dir('.').srcnode().abspath + r'\msvc15\gmock* ' + Dir(gmock_path).abspath + r'\msvc\2015\ /y'
   print Dir('.').abspath
   print cmd
   subprocess.call(cmd, shell=True)
   #build googlemock
   os.chdir(Dir(gmock_path).abspath+ '/msvc/2015')
   print os.getcwd()
   subprocess.call("devenv gmock.sln /Build", shell=True)
   fromfile = os.path.join(Dir(gmock_path).abspath , 'msvc','2015', '{direct}'.format(direct='Debug' if env['TARGET_CONFIG'] =='debug' else 'Release'),  gmocklibname)
   print 'copying ' + fromfile + ' to ' + gmocklibpath
   create_dir_if_needed(Dir('#/build/lib').abspath)
   shutil.copyfile(fromfile, gmocklibpath)


print 'leave gunit'

